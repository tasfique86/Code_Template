#include <bits/stdc++.h>

#define MAX                 100005
#define ll                  long long int
#define vi                  vector<int>
#define vl                  vector<ll>
#define pb                  push_back
#define test                int txx;cin>>txx;while (txx--)
#define YES                 cout << "YES" << endl
#define NO                  cout << "NO" << endl
#define gcd(a,b)            __gcd(a,b)
#define lcm(a,b)            (a*b)/gcd(a,b)
#define fr(i,a,b)           for(ll i=a;i<=b;i++)
#define srt(a)              sort (a.begin(),a.end())
#define rsrt(v)             sort(v.rbegin(),v.rend())
#define Asrt(a,n)             sort (a,a+n);
#define Arsrt(a,n)            sort (a,a+n,greater<int>());
#define mp(x,y)             make_pair(x,y)
#define vp                  vector<pair<int, int > >
#define vpl                 vector<pair<ll, ll> >
#define upbd(v,x)           upper_bound(v.begin(),v.end(),r)
#define lwbd(v,x)           lower_bound(v.begin(),v.end(),r)
#define v_min(a)            *min_element (a.begin(),a.end())
#define v_max(a)            *max_element (a.begin(),a.end())
#define F                   first
#define S                   second
#define MOD                 1000000007
#define uint                unsigned int
#define sp                  cout<<fixed<<setprecision(10)<<num<<endl
#define Vsum(a)             accumulate(a.begin(),a.end(),0)
#define Asum(a,n)           accumulate(a,a+n,0)
#define cov(v)              for(auto it:v)cout<<it<<' '; cout<<endl;
#define civ(v)              for(auto &it:v) cin>>it;
#define Nl                  cout<<"\n";


#define TR ios::sync_with_stdio(false);cin.tie(0);

using namespace std;




//+++++++++++++++++  GRAPH   ++++++++



const int Na=1e5+10;


vector<int> gp[Na];




const int INFI=1e9+10;

int vis[8][8],level[8][8];

int getX(string s){
    return s[0]-'a';
}

int getY(string s){
    return s[1]-'1';
}

vector<pair<int,int>> movemont={
    {-1,2},{1,2},
    {-1,-2},{1,-2},
    {2,-1},{2,1},
    {-2,-1},{-2,1},
};
bool isValid(int x,int y){
    return x>=0 && y>=0 && x<8 && y<8;
}


int bfs(string source,string dest ){
   // YES;
    int srX=getX(source);
    int srY=getY(source);
    int dsX=getX(dest);
    int dsY=getY(dest);
    queue<pair<int,int>> q;
    

    q.push({srX,srY});
    vis[srX][srY]=1;
    level[srX][srY]=0;

    while(!q.empty()){

        pair<int,int> p=q.front();
        int x=p.first, y=p.second;
        q.pop();
        
        for(auto it:movemont){
            int chX=it.first+x;
            int chY=it.second+y;

            if(!isValid(chX,chY)) 
                continue;
            if(vis[chX][chY]==1) 
                continue;
           
            q.push({chX,chY});
            vis[chX][chY]=1;
            level[chX][chY]=level[x][y]+1;
            
        
        }
        if(level[dsX][dsY]!=INFI)
            break;
   }
    return  level[dsX][dsY];

}
void reset()
{
    for(int i=0;i<8;i++)
    {
        for(int j=0;j<8;j++)
        {
            level[i][j]=INFI;
            vis[i][j]= 0;
        }
    }
}

//----------------->https://www.spoj.com/problems/NAKANJ/
//-------------->> BFS <<------------------------------

int main()
{
    TR
    //SievePrime();
    

   

    test
    {
      int n;
      reset();
    
      string s1,s2;
      cin>>s1>>s2;
         
      cout<<bfs(s1,s2)<<endl;
    }
   

}

